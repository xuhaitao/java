---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: kubeapplications.app.kubearena.io
spec:
  group: app.kubearena.io
  names:
    kind: KubeApplication
    listKind: KubeApplicationList
    plural: kubeapplications
    shortNames:
    - app
    singular: kubeapplication
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.displayName
      name: DISPLAY-NAME
      type: string
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .status.status
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: KubeApplication is the Schema for the kubeapplications API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubeApplicationSpec defines the desired state of KubeApplication
            properties:
              displayName:
                type: string
              helmWorkload:
                properties:
                  helmRelease:
                    description: HelmReleaseSpec defines the desired state of a Helm
                      release.
                    properties:
                      chart:
                        description: Chart defines the template of the v1beta2.HelmChart
                          that should be created for this HelmRelease.
                        properties:
                          spec:
                            description: Spec holds the template for the v1beta2.HelmChartSpec
                              for this HelmRelease.
                            properties:
                              chart:
                                description: The name or path the Helm chart is available
                                  at in the SourceRef.
                                type: string
                              interval:
                                description: Interval at which to check the v1beta2.Source
                                  for updates. Defaults to 'HelmReleaseSpec.Interval'.
                                type: string
                              reconcileStrategy:
                                default: ChartVersion
                                description: Determines what enables the creation
                                  of a new artifact. Valid values are ('ChartVersion',
                                  'Revision'). See the documentation of the values
                                  for an explanation on their behavior. Defaults to
                                  ChartVersion when omitted.
                                enum:
                                - ChartVersion
                                - Revision
                                type: string
                              sourceRef:
                                description: The name and namespace of the v1beta2.Source
                                  the chart is available at.
                                properties:
                                  apiVersion:
                                    description: APIVersion of the referent.
                                    type: string
                                  kind:
                                    description: Kind of the referent.
                                    enum:
                                    - HelmRepository
                                    - GitRepository
                                    - Bucket
                                    type: string
                                  name:
                                    description: Name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: Namespace of the referent.
                                    maxLength: 63
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                type: object
                              valuesFile:
                                description: Alternative values file to use as the
                                  default chart values, expected to be a relative
                                  path in the SourceRef. Deprecated in favor of ValuesFiles,
                                  for backwards compatibility the file defined here
                                  is merged before the ValuesFiles items. Ignored
                                  when omitted.
                                type: string
                              valuesFiles:
                                description: Alternative list of values files to use
                                  as the chart values (values.yaml is not included
                                  by default), expected to be a relative path in the
                                  SourceRef. Values files are merged in the order
                                  of this list with the last file overriding the first.
                                  Ignored when omitted.
                                items:
                                  type: string
                                type: array
                              version:
                                default: '*'
                                description: Version semver expression, ignored for
                                  charts from v1beta2.GitRepository and v1beta2.Bucket
                                  sources. Defaults to latest when omitted.
                                type: string
                            required:
                            - chart
                            - sourceRef
                            type: object
                        required:
                        - spec
                        type: object
                      dependsOn:
                        description: DependsOn may contain a meta.NamespacedObjectReference
                          slice with references to HelmRelease resources that must
                          be ready before this HelmRelease can be reconciled.
                        items:
                          description: NamespacedObjectReference contains enough information
                            to locate the referenced Kubernetes resource object in
                            any namespace.
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                            namespace:
                              description: Namespace of the referent, when not specified
                                it acts as LocalObjectReference.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      install:
                        description: Install holds the configuration for Helm install
                          actions for this HelmRelease.
                        properties:
                          crds:
                            description: "CRDs upgrade CRDs from the Helm Chart's
                              crds directory according to the CRD upgrade policy provided
                              here. Valid values are `Skip`, `Create` or `CreateReplace`.
                              Default is `Create` and if omitted CRDs are installed
                              but not updated. \n Skip: do neither install nor replace
                              (update) any CRDs. \n Create: new CRDs are created,
                              existing CRDs are neither updated nor deleted. \n CreateReplace:
                              new CRDs are created, existing CRDs are updated (replaced)
                              but not deleted. \n By default, CRDs are applied (installed)
                              during Helm install action. With this option users can
                              opt-in to CRD replace existing CRDs on Helm install
                              actions, which is not (yet) natively supported by Helm.
                              https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                            enum:
                            - Skip
                            - Create
                            - CreateReplace
                            type: string
                          createNamespace:
                            description: CreateNamespace tells the Helm install action
                              to create the HelmReleaseSpec.TargetNamespace if it
                              does not exist yet. On uninstall, the namespace will
                              not be garbage collected.
                            type: boolean
                          disableHooks:
                            description: DisableHooks prevents hooks from running
                              during the Helm install action.
                            type: boolean
                          disableOpenAPIValidation:
                            description: DisableOpenAPIValidation prevents the Helm
                              install action from validating rendered templates against
                              the Kubernetes OpenAPI Schema.
                            type: boolean
                          disableWait:
                            description: DisableWait disables the waiting for resources
                              to be ready after a Helm install has been performed.
                            type: boolean
                          disableWaitForJobs:
                            description: DisableWaitForJobs disables waiting for jobs
                              to complete after a Helm install has been performed.
                            type: boolean
                          remediation:
                            description: Remediation holds the remediation configuration
                              for when the Helm install action for the HelmRelease
                              fails. The default is to not perform any action.
                            properties:
                              ignoreTestFailures:
                                description: IgnoreTestFailures tells the controller
                                  to skip remediation when the Helm tests are run
                                  after an install action but fail. Defaults to 'Test.IgnoreFailures'.
                                type: boolean
                              remediateLastFailure:
                                description: RemediateLastFailure tells the controller
                                  to remediate the last failure, when no retries remain.
                                  Defaults to 'false'.
                                type: boolean
                              retries:
                                description: Retries is the number of retries that
                                  should be attempted on failures before bailing.
                                  Remediation, using an uninstall, is performed between
                                  each attempt. Defaults to '0', a negative integer
                                  equals to unlimited retries.
                                type: integer
                            type: object
                          replace:
                            description: Replace tells the Helm install action to
                              re-use the 'ReleaseName', but only if that name is a
                              deleted release which remains in the history.
                            type: boolean
                          skipCRDs:
                            description: "SkipCRDs tells the Helm install action to
                              not install any CRDs. By default, CRDs are installed
                              if not already present. \n Deprecated use CRD policy
                              (`crds`) attribute with value `Skip` instead."
                            type: boolean
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation (like Jobs for hooks) during the
                              performance of a Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.
                            type: string
                        type: object
                      interval:
                        description: Interval at which to reconcile the Helm release.
                        type: string
                      kubeConfig:
                        description: KubeConfig for reconciling the HelmRelease on
                          a remote cluster. When used in combination with HelmReleaseSpec.ServiceAccountName,
                          forces the controller to act on behalf of that Service Account
                          at the target cluster. If the --default-service-account
                          flag is set, its value will be used as a controller level
                          fallback for when HelmReleaseSpec.ServiceAccountName is
                          empty.
                        properties:
                          secretRef:
                            description: SecretRef holds the name to a secret that
                              contains a key with the kubeconfig file as the value.
                              If no key is specified the key will default to 'value'.
                              The secret must be in the same namespace as the HelmRelease.
                              It is recommended that the kubeconfig is self-contained,
                              and the secret is regularly updated if credentials such
                              as a cloud-access-token expire. Cloud specific `cmd-path`
                              auth helpers will not function without adding binaries
                              and credentials to the Pod that is responsible for reconciling
                              the HelmRelease.
                            properties:
                              key:
                                description: Key in the Secret, when not specified
                                  an implementation-specific default key is used.
                                type: string
                              name:
                                description: Name of the Secret.
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                      maxHistory:
                        description: MaxHistory is the number of revisions saved by
                          Helm for this HelmRelease. Use '0' for an unlimited number
                          of revisions; defaults to '10'.
                        type: integer
                      postRenderers:
                        description: PostRenderers holds an array of Helm PostRenderers,
                          which will be applied in order of their definition.
                        items:
                          description: PostRenderer contains a Helm PostRenderer specification.
                          properties:
                            kustomize:
                              description: Kustomization to apply as PostRenderer.
                              properties:
                                images:
                                  description: Images is a list of (image name, new
                                    name, new tag or digest) for changing image names,
                                    tags or digests. This can also be achieved with
                                    a patch, but this operator is simpler to specify.
                                  items:
                                    description: Image contains an image name, a new
                                      name, a new tag or digest, which will replace
                                      the original name and tag.
                                    properties:
                                      digest:
                                        description: Digest is the value used to replace
                                          the original image tag. If digest is present
                                          NewTag value is ignored.
                                        type: string
                                      name:
                                        description: Name is a tag-less image name.
                                        type: string
                                      newName:
                                        description: NewName is the value used to
                                          replace the original name.
                                        type: string
                                      newTag:
                                        description: NewTag is the value used to replace
                                          the original tag.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                patches:
                                  description: Strategic merge and JSON patches, defined
                                    as inline YAML objects, capable of targeting objects
                                    based on kind, label and annotation selectors.
                                  items:
                                    description: Patch contains an inline StrategicMerge
                                      or JSON6902 patch, and the target the patch
                                      should be applied to.
                                    properties:
                                      patch:
                                        description: Patch contains an inline StrategicMerge
                                          patch or an inline JSON6902 patch with an
                                          array of operation objects.
                                        type: string
                                      target:
                                        description: Target points to the resources
                                          that the patch document should be applied
                                          to.
                                        properties:
                                          annotationSelector:
                                            description: AnnotationSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource annotations.
                                            type: string
                                          group:
                                            description: Group is the API group to
                                              select resources from. Together with
                                              Version and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          kind:
                                            description: Kind of the API Group to
                                              select resources from. Together with
                                              Group and Version it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          labelSelector:
                                            description: LabelSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource labels.
                                            type: string
                                          name:
                                            description: Name to match resources with.
                                            type: string
                                          namespace:
                                            description: Namespace to select resources
                                              from.
                                            type: string
                                          version:
                                            description: Version of the API Group
                                              to select resources from. Together with
                                              Group and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                patchesJson6902:
                                  description: JSON 6902 patches, defined as inline
                                    YAML objects.
                                  items:
                                    description: JSON6902Patch contains a JSON6902
                                      patch and the target the patch should be applied
                                      to.
                                    properties:
                                      patch:
                                        description: Patch contains the JSON6902 patch
                                          document with an array of operation objects.
                                        items:
                                          description: JSON6902 is a JSON6902 operation
                                            object. https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                          properties:
                                            from:
                                              description: From contains a JSON-pointer
                                                value that references a location within
                                                the target document where the operation
                                                is performed. The meaning of the value
                                                depends on the value of Op, and is
                                                NOT taken into account by all operations.
                                              type: string
                                            op:
                                              description: Op indicates the operation
                                                to perform. Its value MUST be one
                                                of "add", "remove", "replace", "move",
                                                "copy", or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                              enum:
                                              - test
                                              - remove
                                              - add
                                              - replace
                                              - move
                                              - copy
                                              type: string
                                            path:
                                              description: Path contains the JSON-pointer
                                                value that references a location within
                                                the target document where the operation
                                                is performed. The meaning of the value
                                                depends on the value of Op.
                                              type: string
                                            value:
                                              description: Value contains a valid
                                                JSON structure. The meaning of the
                                                value depends on the value of Op,
                                                and is NOT taken into account by all
                                                operations.
                                              x-kubernetes-preserve-unknown-fields: true
                                          required:
                                          - op
                                          - path
                                          type: object
                                        type: array
                                      target:
                                        description: Target points to the resources
                                          that the patch document should be applied
                                          to.
                                        properties:
                                          annotationSelector:
                                            description: AnnotationSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource annotations.
                                            type: string
                                          group:
                                            description: Group is the API group to
                                              select resources from. Together with
                                              Version and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          kind:
                                            description: Kind of the API Group to
                                              select resources from. Together with
                                              Group and Version it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          labelSelector:
                                            description: LabelSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource labels.
                                            type: string
                                          name:
                                            description: Name to match resources with.
                                            type: string
                                          namespace:
                                            description: Namespace to select resources
                                              from.
                                            type: string
                                          version:
                                            description: Version of the API Group
                                              to select resources from. Together with
                                              Group and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                        type: object
                                    required:
                                    - patch
                                    - target
                                    type: object
                                  type: array
                                patchesStrategicMerge:
                                  description: Strategic merge patches, defined as
                                    inline YAML objects.
                                  items:
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                              type: object
                          type: object
                        type: array
                      releaseName:
                        description: ReleaseName used for the Helm release. Defaults
                          to a composition of '[TargetNamespace-]Name'.
                        maxLength: 53
                        minLength: 1
                        type: string
                      rollback:
                        description: Rollback holds the configuration for Helm rollback
                          actions for this HelmRelease.
                        properties:
                          cleanupOnFail:
                            description: CleanupOnFail allows deletion of new resources
                              created during the Helm rollback action when it fails.
                            type: boolean
                          disableHooks:
                            description: DisableHooks prevents hooks from running
                              during the Helm rollback action.
                            type: boolean
                          disableWait:
                            description: DisableWait disables the waiting for resources
                              to be ready after a Helm rollback has been performed.
                            type: boolean
                          disableWaitForJobs:
                            description: DisableWaitForJobs disables waiting for jobs
                              to complete after a Helm rollback has been performed.
                            type: boolean
                          force:
                            description: Force forces resource updates through a replacement
                              strategy.
                            type: boolean
                          recreate:
                            description: Recreate performs pod restarts for the resource
                              if applicable.
                            type: boolean
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation (like Jobs for hooks) during the
                              performance of a Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.
                            type: string
                        type: object
                      serviceAccountName:
                        description: The name of the Kubernetes service account to
                          impersonate when reconciling this HelmRelease.
                        type: string
                      storageNamespace:
                        description: StorageNamespace used for the Helm storage. Defaults
                          to the namespace of the HelmRelease.
                        maxLength: 63
                        minLength: 1
                        type: string
                      suspend:
                        description: Suspend tells the controller to suspend reconciliation
                          for this HelmRelease, it does not apply to already started
                          reconciliations. Defaults to false.
                        type: boolean
                      targetNamespace:
                        description: TargetNamespace to target when performing operations
                          for the HelmRelease. Defaults to the namespace of the HelmRelease.
                        maxLength: 63
                        minLength: 1
                        type: string
                      test:
                        description: Test holds the configuration for Helm test actions
                          for this HelmRelease.
                        properties:
                          enable:
                            description: Enable enables Helm test actions for this
                              HelmRelease after an Helm install or upgrade action
                              has been performed.
                            type: boolean
                          ignoreFailures:
                            description: IgnoreFailures tells the controller to skip
                              remediation when the Helm tests are run but fail. Can
                              be overwritten for tests run after install or upgrade
                              actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                            type: boolean
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation during the performance of a Helm
                              test action. Defaults to 'HelmReleaseSpec.Timeout'.
                            type: string
                        type: object
                      timeout:
                        description: Timeout is the time to wait for any individual
                          Kubernetes operation (like Jobs for hooks) during the performance
                          of a Helm action. Defaults to '5m0s'.
                        type: string
                      uninstall:
                        description: Uninstall holds the configuration for Helm uninstall
                          actions for this HelmRelease.
                        properties:
                          disableHooks:
                            description: DisableHooks prevents hooks from running
                              during the Helm rollback action.
                            type: boolean
                          disableWait:
                            description: DisableWait disables waiting for all the
                              resources to be deleted after a Helm uninstall is performed.
                            type: boolean
                          keepHistory:
                            description: KeepHistory tells Helm to remove all associated
                              resources and mark the release as deleted, but retain
                              the release history.
                            type: boolean
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation (like Jobs for hooks) during the
                              performance of a Helm uninstall action. Defaults to
                              'HelmReleaseSpec.Timeout'.
                            type: string
                        type: object
                      upgrade:
                        description: Upgrade holds the configuration for Helm upgrade
                          actions for this HelmRelease.
                        properties:
                          cleanupOnFail:
                            description: CleanupOnFail allows deletion of new resources
                              created during the Helm upgrade action when it fails.
                            type: boolean
                          crds:
                            description: "CRDs upgrade CRDs from the Helm Chart's
                              crds directory according to the CRD upgrade policy provided
                              here. Valid values are `Skip`, `Create` or `CreateReplace`.
                              Default is `Skip` and if omitted CRDs are neither installed
                              nor upgraded. \n Skip: do neither install nor replace
                              (update) any CRDs. \n Create: new CRDs are created,
                              existing CRDs are neither updated nor deleted. \n CreateReplace:
                              new CRDs are created, existing CRDs are updated (replaced)
                              but not deleted. \n By default, CRDs are not applied
                              during Helm upgrade action. With this option users can
                              opt-in to CRD upgrade, which is not (yet) natively supported
                              by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                            enum:
                            - Skip
                            - Create
                            - CreateReplace
                            type: string
                          disableHooks:
                            description: DisableHooks prevents hooks from running
                              during the Helm upgrade action.
                            type: boolean
                          disableOpenAPIValidation:
                            description: DisableOpenAPIValidation prevents the Helm
                              upgrade action from validating rendered templates against
                              the Kubernetes OpenAPI Schema.
                            type: boolean
                          disableWait:
                            description: DisableWait disables the waiting for resources
                              to be ready after a Helm upgrade has been performed.
                            type: boolean
                          disableWaitForJobs:
                            description: DisableWaitForJobs disables waiting for jobs
                              to complete after a Helm upgrade has been performed.
                            type: boolean
                          force:
                            description: Force forces resource updates through a replacement
                              strategy.
                            type: boolean
                          preserveValues:
                            description: PreserveValues will make Helm reuse the last
                              release's values and merge in overrides from 'Values'.
                              Setting this flag makes the HelmRelease non-declarative.
                            type: boolean
                          remediation:
                            description: Remediation holds the remediation configuration
                              for when the Helm upgrade action for the HelmRelease
                              fails. The default is to not perform any action.
                            properties:
                              ignoreTestFailures:
                                description: IgnoreTestFailures tells the controller
                                  to skip remediation when the Helm tests are run
                                  after an upgrade action but fail. Defaults to 'Test.IgnoreFailures'.
                                type: boolean
                              remediateLastFailure:
                                description: RemediateLastFailure tells the controller
                                  to remediate the last failure, when no retries remain.
                                  Defaults to 'false' unless 'Retries' is greater
                                  than 0.
                                type: boolean
                              retries:
                                description: Retries is the number of retries that
                                  should be attempted on failures before bailing.
                                  Remediation, using 'Strategy', is performed between
                                  each attempt. Defaults to '0', a negative integer
                                  equals to unlimited retries.
                                type: integer
                              strategy:
                                description: Strategy to use for failure remediation.
                                  Defaults to 'rollback'.
                                enum:
                                - rollback
                                - uninstall
                                type: string
                            type: object
                          timeout:
                            description: Timeout is the time to wait for any individual
                              Kubernetes operation (like Jobs for hooks) during the
                              performance of a Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.
                            type: string
                        type: object
                      values:
                        description: Values holds the values for this Helm release.
                        x-kubernetes-preserve-unknown-fields: true
                      valuesFrom:
                        description: ValuesFrom holds references to resources containing
                          Helm values for this HelmRelease, and information about
                          how they should be merged.
                        items:
                          description: ValuesReference contains a reference to a resource
                            containing Helm values, and optionally the key they can
                            be found at.
                          properties:
                            kind:
                              description: Kind of the values referent, valid values
                                are ('Secret', 'ConfigMap').
                              enum:
                              - Secret
                              - ConfigMap
                              type: string
                            name:
                              description: Name of the values referent. Should reside
                                in the same namespace as the referring resource.
                              maxLength: 253
                              minLength: 1
                              type: string
                            optional:
                              description: Optional marks this ValuesReference as
                                optional. When set, a not found error for the values
                                reference is ignored, but any ValuesKey, TargetPath
                                or transient error will still result in a reconciliation
                                failure.
                              type: boolean
                            targetPath:
                              description: TargetPath is the YAML dot notation path
                                the value should be merged at. When set, the ValuesKey
                                is expected to be a single flat value. Defaults to
                                'None', which results in the values getting merged
                                at the root.
                              type: string
                            valuesKey:
                              description: ValuesKey is the data key where the values.yaml
                                or a specific value can be found at. Defaults to 'values.yaml'.
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        type: array
                    required:
                    - chart
                    - interval
                    type: object
                  overridePolicy:
                    description: OverrideSpec defines the desired behavior of OverridePolicy.
                    properties:
                      overrideRules:
                        description: OverrideRules defines a collection of override
                          rules on target clusters.
                        items:
                          description: RuleWithCluster defines the override rules
                            on clusters.
                          properties:
                            overriders:
                              description: Overriders represents the override rules
                                that would apply on resources
                              properties:
                                argsOverrider:
                                  description: ArgsOverrider represents the rules
                                    dedicated to handling container args
                                  items:
                                    description: CommandArgsOverrider represents the
                                      rules dedicated to handling command/args overrides.
                                    properties:
                                      containerName:
                                        description: The name of container
                                        type: string
                                      operator:
                                        description: Operator represents the operator
                                          which will apply on the command/args.
                                        enum:
                                        - add
                                        - remove
                                        type: string
                                      value:
                                        description: Value to be applied to command/args.
                                          Items in Value which will be appended after
                                          command/args when Operator is 'add'. Items
                                          in Value which match in command/args will
                                          be deleted when Operator is 'remove'. If
                                          Value is empty, then the command/args will
                                          remain the same.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - containerName
                                    - operator
                                    type: object
                                  type: array
                                commandOverrider:
                                  description: CommandOverrider represents the rules
                                    dedicated to handling container command
                                  items:
                                    description: CommandArgsOverrider represents the
                                      rules dedicated to handling command/args overrides.
                                    properties:
                                      containerName:
                                        description: The name of container
                                        type: string
                                      operator:
                                        description: Operator represents the operator
                                          which will apply on the command/args.
                                        enum:
                                        - add
                                        - remove
                                        type: string
                                      value:
                                        description: Value to be applied to command/args.
                                          Items in Value which will be appended after
                                          command/args when Operator is 'add'. Items
                                          in Value which match in command/args will
                                          be deleted when Operator is 'remove'. If
                                          Value is empty, then the command/args will
                                          remain the same.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - containerName
                                    - operator
                                    type: object
                                  type: array
                                imageOverrider:
                                  description: ImageOverrider represents the rules
                                    dedicated to handling image overrides.
                                  items:
                                    description: ImageOverrider represents the rules
                                      dedicated to handling image overrides.
                                    properties:
                                      component:
                                        description: 'Component is part of image name.
                                          Basically we presume an image can be made
                                          of ''[registry/]repository[:tag]''. The
                                          registry could be: - k8s.gcr.io - fictional.registry.example:10443
                                          The repository could be: - kube-apiserver
                                          - fictional/nginx The tag cloud be: - latest
                                          - v1.19.1 - @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c'
                                        enum:
                                        - Registry
                                        - Repository
                                        - Tag
                                        type: string
                                      operator:
                                        description: Operator represents the operator
                                          which will apply on the image.
                                        enum:
                                        - add
                                        - remove
                                        - replace
                                        type: string
                                      predicate:
                                        description: "Predicate filters images before
                                          applying the rule. \n Defaults to nil, in
                                          that case, the system will automatically
                                          detect image fields if the resource type
                                          is Pod, ReplicaSet, Deployment or StatefulSet
                                          by following rule: - Pod: spec/containers/<N>/image
                                          - ReplicaSet: spec/template/spec/containers/<N>/image
                                          - Deployment: spec/template/spec/containers/<N>/image
                                          - StatefulSet: spec/template/spec/containers/<N>/image
                                          In addition, all images will be processed
                                          if the resource object has more than one
                                          containers. \n If not nil, only images matches
                                          the filters will be processed."
                                        properties:
                                          path:
                                            description: Path indicates the path of
                                              target field
                                            type: string
                                        required:
                                        - path
                                        type: object
                                      value:
                                        description: Value to be applied to image.
                                          Must not be empty when operator is 'add'
                                          or 'replace'. Defaults to empty and ignored
                                          when operator is 'remove'.
                                        type: string
                                    required:
                                    - component
                                    - operator
                                    type: object
                                  type: array
                                plaintext:
                                  description: Plaintext represents override rules
                                    defined with plaintext overriders.
                                  items:
                                    description: PlaintextOverrider is a simple overrider
                                      that overrides target fields according to path,
                                      operator and value.
                                    properties:
                                      operator:
                                        description: 'Operator indicates the operation
                                          on target field. Available operators are:
                                          add, update and remove.'
                                        enum:
                                        - add
                                        - remove
                                        - replace
                                        type: string
                                      path:
                                        description: Path indicates the path of target
                                          field
                                        type: string
                                      value:
                                        description: Value to be applied to target
                                          field. Must be empty when operator is Remove.
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                    - operator
                                    - path
                                    type: object
                                  type: array
                              type: object
                            targetCluster:
                              description: TargetCluster defines restrictions on this
                                override policy that only applies to resources propagated
                                to the matching clusters. nil means matching all clusters.
                              properties:
                                clusterNames:
                                  description: ClusterNames is the list of clusters
                                    to be selected.
                                  items:
                                    type: string
                                  type: array
                                exclude:
                                  description: ExcludedClusters is the list of clusters
                                    to be ignored.
                                  items:
                                    type: string
                                  type: array
                                fieldSelector:
                                  description: FieldSelector is a filter to select
                                    member clusters by fields. If non-nil and non-empty,
                                    only the clusters match this filter will be selected.
                                  properties:
                                    matchExpressions:
                                      description: A list of field selector requirements.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                labelSelector:
                                  description: LabelSelector is a filter to select
                                    member clusters by labels. If non-nil and non-empty,
                                    only the clusters match this filter will be selected.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                          - overriders
                          type: object
                        type: array
                      overriders:
                        description: "Overriders represents the override rules that
                          would apply on resources \n Deprecated: This filed is deprecated
                          in v1.0 and please use the OverrideRules instead."
                        properties:
                          argsOverrider:
                            description: ArgsOverrider represents the rules dedicated
                              to handling container args
                            items:
                              description: CommandArgsOverrider represents the rules
                                dedicated to handling command/args overrides.
                              properties:
                                containerName:
                                  description: The name of container
                                  type: string
                                operator:
                                  description: Operator represents the operator which
                                    will apply on the command/args.
                                  enum:
                                  - add
                                  - remove
                                  type: string
                                value:
                                  description: Value to be applied to command/args.
                                    Items in Value which will be appended after command/args
                                    when Operator is 'add'. Items in Value which match
                                    in command/args will be deleted when Operator
                                    is 'remove'. If Value is empty, then the command/args
                                    will remain the same.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - containerName
                              - operator
                              type: object
                            type: array
                          commandOverrider:
                            description: CommandOverrider represents the rules dedicated
                              to handling container command
                            items:
                              description: CommandArgsOverrider represents the rules
                                dedicated to handling command/args overrides.
                              properties:
                                containerName:
                                  description: The name of container
                                  type: string
                                operator:
                                  description: Operator represents the operator which
                                    will apply on the command/args.
                                  enum:
                                  - add
                                  - remove
                                  type: string
                                value:
                                  description: Value to be applied to command/args.
                                    Items in Value which will be appended after command/args
                                    when Operator is 'add'. Items in Value which match
                                    in command/args will be deleted when Operator
                                    is 'remove'. If Value is empty, then the command/args
                                    will remain the same.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - containerName
                              - operator
                              type: object
                            type: array
                          imageOverrider:
                            description: ImageOverrider represents the rules dedicated
                              to handling image overrides.
                            items:
                              description: ImageOverrider represents the rules dedicated
                                to handling image overrides.
                              properties:
                                component:
                                  description: 'Component is part of image name. Basically
                                    we presume an image can be made of ''[registry/]repository[:tag]''.
                                    The registry could be: - k8s.gcr.io - fictional.registry.example:10443
                                    The repository could be: - kube-apiserver - fictional/nginx
                                    The tag cloud be: - latest - v1.19.1 - @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c'
                                  enum:
                                  - Registry
                                  - Repository
                                  - Tag
                                  type: string
                                operator:
                                  description: Operator represents the operator which
                                    will apply on the image.
                                  enum:
                                  - add
                                  - remove
                                  - replace
                                  type: string
                                predicate:
                                  description: "Predicate filters images before applying
                                    the rule. \n Defaults to nil, in that case, the
                                    system will automatically detect image fields
                                    if the resource type is Pod, ReplicaSet, Deployment
                                    or StatefulSet by following rule: - Pod: spec/containers/<N>/image
                                    - ReplicaSet: spec/template/spec/containers/<N>/image
                                    - Deployment: spec/template/spec/containers/<N>/image
                                    - StatefulSet: spec/template/spec/containers/<N>/image
                                    In addition, all images will be processed if the
                                    resource object has more than one containers.
                                    \n If not nil, only images matches the filters
                                    will be processed."
                                  properties:
                                    path:
                                      description: Path indicates the path of target
                                        field
                                      type: string
                                  required:
                                  - path
                                  type: object
                                value:
                                  description: Value to be applied to image. Must
                                    not be empty when operator is 'add' or 'replace'.
                                    Defaults to empty and ignored when operator is
                                    'remove'.
                                  type: string
                              required:
                              - component
                              - operator
                              type: object
                            type: array
                          plaintext:
                            description: Plaintext represents override rules defined
                              with plaintext overriders.
                            items:
                              description: PlaintextOverrider is a simple overrider
                                that overrides target fields according to path, operator
                                and value.
                              properties:
                                operator:
                                  description: 'Operator indicates the operation on
                                    target field. Available operators are: add, update
                                    and remove.'
                                  enum:
                                  - add
                                  - remove
                                  - replace
                                  type: string
                                path:
                                  description: Path indicates the path of target field
                                  type: string
                                value:
                                  description: Value to be applied to target field.
                                    Must be empty when operator is Remove.
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                              - operator
                              - path
                              type: object
                            type: array
                        type: object
                      resourceSelectors:
                        description: ResourceSelectors restricts resource types that
                          this override policy applies to. nil means matching all
                          resources.
                        items:
                          description: ResourceSelector the resources will be selected.
                          properties:
                            apiVersion:
                              description: APIVersion represents the API version of
                                the target resources.
                              type: string
                            kind:
                              description: Kind represents the Kind of the target
                                resources.
                              type: string
                            labelSelector:
                              description: A label query over a set of resources.
                                If name is not empty, labelSelector will be ignored.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            name:
                              description: Name of the target resource. Default is
                                empty, which means selecting all resources.
                              type: string
                            namespace:
                              description: Namespace of the target resource. Default
                                is empty, which means inherit from the parent object
                                scope.
                              type: string
                          required:
                          - apiVersion
                          - kind
                          type: object
                        type: array
                      targetCluster:
                        description: "TargetCluster defines restrictions on this override
                          policy that only applies to resources propagated to the
                          matching clusters. nil means matching all clusters. \n Deprecated:
                          This filed is deprecated in v1.0 and please use the OverrideRules
                          instead."
                        properties:
                          clusterNames:
                            description: ClusterNames is the list of clusters to be
                              selected.
                            items:
                              type: string
                            type: array
                          exclude:
                            description: ExcludedClusters is the list of clusters
                              to be ignored.
                            items:
                              type: string
                            type: array
                          fieldSelector:
                            description: FieldSelector is a filter to select member
                              clusters by fields. If non-nil and non-empty, only the
                              clusters match this filter will be selected.
                            properties:
                              matchExpressions:
                                description: A list of field selector requirements.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          labelSelector:
                            description: LabelSelector is a filter to select member
                              clusters by labels. If non-nil and non-empty, only the
                              clusters match this filter will be selected.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    type: object
                  propagationPolicy:
                    description: PropagationSpec represents the desired behavior of
                      PropagationPolicy.
                    properties:
                      association:
                        description: 'Association tells if relevant resources should
                          be selected automatically. e.g. a ConfigMap referred by
                          a Deployment. default false. Deprecated: in favor of PropagateDeps.'
                        type: boolean
                      dependentOverrides:
                        description: "DependentOverrides represents the list of overrides(OverridePolicy)
                          which must present before the current PropagationPolicy
                          takes effect. \n It used to explicitly specify overrides
                          which current PropagationPolicy rely on. A typical scenario
                          is the users create OverridePolicy(ies) and resources at
                          the same time, they want to ensure the new-created policies
                          would be adopted. \n Note: For the overrides, OverridePolicy(ies)
                          in current namespace and ClusterOverridePolicy(ies), which
                          not present in this list will still be applied if they matches
                          the resources."
                        items:
                          type: string
                        type: array
                      placement:
                        description: Placement represents the rule for select clusters
                          to propagate resources.
                        properties:
                          clusterAffinity:
                            description: ClusterAffinity represents scheduling restrictions
                              to a certain set of clusters. If not set, any cluster
                              can be scheduling candidate.
                            properties:
                              clusterNames:
                                description: ClusterNames is the list of clusters
                                  to be selected.
                                items:
                                  type: string
                                type: array
                              exclude:
                                description: ExcludedClusters is the list of clusters
                                  to be ignored.
                                items:
                                  type: string
                                type: array
                              fieldSelector:
                                description: FieldSelector is a filter to select member
                                  clusters by fields. If non-nil and non-empty, only
                                  the clusters match this filter will be selected.
                                properties:
                                  matchExpressions:
                                    description: A list of field selector requirements.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              labelSelector:
                                description: LabelSelector is a filter to select member
                                  clusters by labels. If non-nil and non-empty, only
                                  the clusters match this filter will be selected.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          clusterTolerations:
                            description: ClusterTolerations represents the tolerations.
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                          replicaScheduling:
                            description: ReplicaScheduling represents the scheduling
                              policy on dealing with the number of replicas when propagating
                              resources that have replicas in spec (e.g. deployments,
                              statefulsets) to member clusters.
                            properties:
                              replicaDivisionPreference:
                                description: ReplicaDivisionPreference determines
                                  how the replicas is divided when ReplicaSchedulingType
                                  is "Divided". Valid options are Aggregated and Weighted.
                                  "Aggregated" divides replicas into clusters as few
                                  as possible, while respecting clusters' resource
                                  availabilities during the division. "Weighted" divides
                                  replicas by weight according to WeightPreference.
                                enum:
                                - Aggregated
                                - Weighted
                                type: string
                              replicaSchedulingType:
                                description: ReplicaSchedulingType determines how
                                  the replicas is scheduled when karmada propagating
                                  a resource. Valid options are Duplicated and Divided.
                                  "Duplicated" duplicates the same replicas to each
                                  candidate member cluster from resource. "Divided"
                                  divides replicas into parts according to number
                                  of valid candidate member clusters, and exact replicas
                                  for each cluster are determined by ReplicaDivisionPreference.
                                enum:
                                - Duplicated
                                - Divided
                                type: string
                              weightPreference:
                                description: WeightPreference describes weight for
                                  each cluster or for each group of cluster If ReplicaDivisionPreference
                                  is set to "Weighted", and WeightPreference is not
                                  set, scheduler will weight all clusters the same.
                                properties:
                                  dynamicWeight:
                                    description: DynamicWeight specifies the factor
                                      to generates dynamic weight list. If specified,
                                      StaticWeightList will be ignored.
                                    enum:
                                    - AvailableReplicas
                                    type: string
                                  staticWeightList:
                                    description: StaticWeightList defines the static
                                      cluster weight.
                                    items:
                                      description: StaticClusterWeight defines the
                                        static cluster weight.
                                      properties:
                                        targetCluster:
                                          description: TargetCluster describes the
                                            filter to select clusters.
                                          properties:
                                            clusterNames:
                                              description: ClusterNames is the list
                                                of clusters to be selected.
                                              items:
                                                type: string
                                              type: array
                                            exclude:
                                              description: ExcludedClusters is the
                                                list of clusters to be ignored.
                                              items:
                                                type: string
                                              type: array
                                            fieldSelector:
                                              description: FieldSelector is a filter
                                                to select member clusters by fields.
                                                If non-nil and non-empty, only the
                                                clusters match this filter will be
                                                selected.
                                              properties:
                                                matchExpressions:
                                                  description: A list of field selector
                                                    requirements.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                            labelSelector:
                                              description: LabelSelector is a filter
                                                to select member clusters by labels.
                                                If non-nil and non-empty, only the
                                                clusters match this filter will be
                                                selected.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                        weight:
                                          description: Weight expressing the preference
                                            to the cluster(s) specified by 'TargetCluster'.
                                          format: int64
                                          minimum: 1
                                          type: integer
                                      required:
                                      - targetCluster
                                      - weight
                                      type: object
                                    type: array
                                type: object
                            type: object
                          spreadConstraints:
                            description: SpreadConstraints represents a list of the
                              scheduling constraints.
                            items:
                              description: SpreadConstraint represents the spread
                                constraints on resources.
                              properties:
                                maxGroups:
                                  description: MaxGroups restricts the maximum number
                                    of cluster groups to be selected.
                                  type: integer
                                minGroups:
                                  description: MinGroups restricts the minimum number
                                    of cluster groups to be selected. Defaults to
                                    1.
                                  type: integer
                                spreadByField:
                                  description: 'SpreadByField represents the fields
                                    on Karmada cluster API used for dynamically grouping
                                    member clusters into different groups. Resources
                                    will be spread among different cluster groups.
                                    Available fields for spreading are: cluster, region,
                                    zone, and provider. SpreadByField should not co-exist
                                    with SpreadByLabel. If both SpreadByField and
                                    SpreadByLabel are empty, SpreadByField will be
                                    set to "cluster" by system.'
                                  enum:
                                  - cluster
                                  - region
                                  - zone
                                  - provider
                                  type: string
                                spreadByLabel:
                                  description: SpreadByLabel represents the label
                                    key used for grouping member clusters into different
                                    groups. Resources will be spread among different
                                    cluster groups. SpreadByLabel should not co-exist
                                    with SpreadByField.
                                  type: string
                              type: object
                            type: array
                        type: object
                      propagateDeps:
                        description: "PropagateDeps tells if relevant resources should
                          be propagated automatically. Take 'Deployment' which referencing
                          'ConfigMap' and 'Secret' as an example, when 'propagateDeps'
                          is 'true', the referencing resources could be omitted(for
                          saving config effort) from 'resourceSelectors' as they will
                          be propagated along with the Deployment. In addition to
                          the propagating process, the referencing resources will
                          be migrated along with the Deployment in the fail-over scenario.
                          \n Defaults to false."
                        type: boolean
                      resourceSelectors:
                        description: ResourceSelectors used to select resources.
                        items:
                          description: ResourceSelector the resources will be selected.
                          properties:
                            apiVersion:
                              description: APIVersion represents the API version of
                                the target resources.
                              type: string
                            kind:
                              description: Kind represents the Kind of the target
                                resources.
                              type: string
                            labelSelector:
                              description: A label query over a set of resources.
                                If name is not empty, labelSelector will be ignored.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            name:
                              description: Name of the target resource. Default is
                                empty, which means selecting all resources.
                              type: string
                            namespace:
                              description: Namespace of the target resource. Default
                                is empty, which means inherit from the parent object
                                scope.
                              type: string
                          required:
                          - apiVersion
                          - kind
                          type: object
                        type: array
                      schedulerName:
                        description: SchedulerName represents which scheduler to proceed
                          the scheduling. If specified, the policy will be dispatched
                          by specified scheduler. If not specified, the policy will
                          be dispatched by default scheduler.
                        type: string
                    required:
                    - resourceSelectors
                    type: object
                required:
                - helmRelease
                type: object
              manifestWorkload:
                properties:
                  overridePolicy:
                    description: OverrideSpec defines the desired behavior of OverridePolicy.
                    properties:
                      overrideRules:
                        description: OverrideRules defines a collection of override
                          rules on target clusters.
                        items:
                          description: RuleWithCluster defines the override rules
                            on clusters.
                          properties:
                            overriders:
                              description: Overriders represents the override rules
                                that would apply on resources
                              properties:
                                argsOverrider:
                                  description: ArgsOverrider represents the rules
                                    dedicated to handling container args
                                  items:
                                    description: CommandArgsOverrider represents the
                                      rules dedicated to handling command/args overrides.
                                    properties:
                                      containerName:
                                        description: The name of container
                                        type: string
                                      operator:
                                        description: Operator represents the operator
                                          which will apply on the command/args.
                                        enum:
                                        - add
                                        - remove
                                        type: string
                                      value:
                                        description: Value to be applied to command/args.
                                          Items in Value which will be appended after
                                          command/args when Operator is 'add'. Items
                                          in Value which match in command/args will
                                          be deleted when Operator is 'remove'. If
                                          Value is empty, then the command/args will
                                          remain the same.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - containerName
                                    - operator
                                    type: object
                                  type: array
                                commandOverrider:
                                  description: CommandOverrider represents the rules
                                    dedicated to handling container command
                                  items:
                                    description: CommandArgsOverrider represents the
                                      rules dedicated to handling command/args overrides.
                                    properties:
                                      containerName:
                                        description: The name of container
                                        type: string
                                      operator:
                                        description: Operator represents the operator
                                          which will apply on the command/args.
                                        enum:
                                        - add
                                        - remove
                                        type: string
                                      value:
                                        description: Value to be applied to command/args.
                                          Items in Value which will be appended after
                                          command/args when Operator is 'add'. Items
                                          in Value which match in command/args will
                                          be deleted when Operator is 'remove'. If
                                          Value is empty, then the command/args will
                                          remain the same.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - containerName
                                    - operator
                                    type: object
                                  type: array
                                imageOverrider:
                                  description: ImageOverrider represents the rules
                                    dedicated to handling image overrides.
                                  items:
                                    description: ImageOverrider represents the rules
                                      dedicated to handling image overrides.
                                    properties:
                                      component:
                                        description: 'Component is part of image name.
                                          Basically we presume an image can be made
                                          of ''[registry/]repository[:tag]''. The
                                          registry could be: - k8s.gcr.io - fictional.registry.example:10443
                                          The repository could be: - kube-apiserver
                                          - fictional/nginx The tag cloud be: - latest
                                          - v1.19.1 - @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c'
                                        enum:
                                        - Registry
                                        - Repository
                                        - Tag
                                        type: string
                                      operator:
                                        description: Operator represents the operator
                                          which will apply on the image.
                                        enum:
                                        - add
                                        - remove
                                        - replace
                                        type: string
                                      predicate:
                                        description: "Predicate filters images before
                                          applying the rule. \n Defaults to nil, in
                                          that case, the system will automatically
                                          detect image fields if the resource type
                                          is Pod, ReplicaSet, Deployment or StatefulSet
                                          by following rule: - Pod: spec/containers/<N>/image
                                          - ReplicaSet: spec/template/spec/containers/<N>/image
                                          - Deployment: spec/template/spec/containers/<N>/image
                                          - StatefulSet: spec/template/spec/containers/<N>/image
                                          In addition, all images will be processed
                                          if the resource object has more than one
                                          containers. \n If not nil, only images matches
                                          the filters will be processed."
                                        properties:
                                          path:
                                            description: Path indicates the path of
                                              target field
                                            type: string
                                        required:
                                        - path
                                        type: object
                                      value:
                                        description: Value to be applied to image.
                                          Must not be empty when operator is 'add'
                                          or 'replace'. Defaults to empty and ignored
                                          when operator is 'remove'.
                                        type: string
                                    required:
                                    - component
                                    - operator
                                    type: object
                                  type: array
                                plaintext:
                                  description: Plaintext represents override rules
                                    defined with plaintext overriders.
                                  items:
                                    description: PlaintextOverrider is a simple overrider
                                      that overrides target fields according to path,
                                      operator and value.
                                    properties:
                                      operator:
                                        description: 'Operator indicates the operation
                                          on target field. Available operators are:
                                          add, update and remove.'
                                        enum:
                                        - add
                                        - remove
                                        - replace
                                        type: string
                                      path:
                                        description: Path indicates the path of target
                                          field
                                        type: string
                                      value:
                                        description: Value to be applied to target
                                          field. Must be empty when operator is Remove.
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                    - operator
                                    - path
                                    type: object
                                  type: array
                              type: object
                            targetCluster:
                              description: TargetCluster defines restrictions on this
                                override policy that only applies to resources propagated
                                to the matching clusters. nil means matching all clusters.
                              properties:
                                clusterNames:
                                  description: ClusterNames is the list of clusters
                                    to be selected.
                                  items:
                                    type: string
                                  type: array
                                exclude:
                                  description: ExcludedClusters is the list of clusters
                                    to be ignored.
                                  items:
                                    type: string
                                  type: array
                                fieldSelector:
                                  description: FieldSelector is a filter to select
                                    member clusters by fields. If non-nil and non-empty,
                                    only the clusters match this filter will be selected.
                                  properties:
                                    matchExpressions:
                                      description: A list of field selector requirements.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                labelSelector:
                                  description: LabelSelector is a filter to select
                                    member clusters by labels. If non-nil and non-empty,
                                    only the clusters match this filter will be selected.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                          - overriders
                          type: object
                        type: array
                      overriders:
                        description: "Overriders represents the override rules that
                          would apply on resources \n Deprecated: This filed is deprecated
                          in v1.0 and please use the OverrideRules instead."
                        properties:
                          argsOverrider:
                            description: ArgsOverrider represents the rules dedicated
                              to handling container args
                            items:
                              description: CommandArgsOverrider represents the rules
                                dedicated to handling command/args overrides.
                              properties:
                                containerName:
                                  description: The name of container
                                  type: string
                                operator:
                                  description: Operator represents the operator which
                                    will apply on the command/args.
                                  enum:
                                  - add
                                  - remove
                                  type: string
                                value:
                                  description: Value to be applied to command/args.
                                    Items in Value which will be appended after command/args
                                    when Operator is 'add'. Items in Value which match
                                    in command/args will be deleted when Operator
                                    is 'remove'. If Value is empty, then the command/args
                                    will remain the same.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - containerName
                              - operator
                              type: object
                            type: array
                          commandOverrider:
                            description: CommandOverrider represents the rules dedicated
                              to handling container command
                            items:
                              description: CommandArgsOverrider represents the rules
                                dedicated to handling command/args overrides.
                              properties:
                                containerName:
                                  description: The name of container
                                  type: string
                                operator:
                                  description: Operator represents the operator which
                                    will apply on the command/args.
                                  enum:
                                  - add
                                  - remove
                                  type: string
                                value:
                                  description: Value to be applied to command/args.
                                    Items in Value which will be appended after command/args
                                    when Operator is 'add'. Items in Value which match
                                    in command/args will be deleted when Operator
                                    is 'remove'. If Value is empty, then the command/args
                                    will remain the same.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - containerName
                              - operator
                              type: object
                            type: array
                          imageOverrider:
                            description: ImageOverrider represents the rules dedicated
                              to handling image overrides.
                            items:
                              description: ImageOverrider represents the rules dedicated
                                to handling image overrides.
                              properties:
                                component:
                                  description: 'Component is part of image name. Basically
                                    we presume an image can be made of ''[registry/]repository[:tag]''.
                                    The registry could be: - k8s.gcr.io - fictional.registry.example:10443
                                    The repository could be: - kube-apiserver - fictional/nginx
                                    The tag cloud be: - latest - v1.19.1 - @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c'
                                  enum:
                                  - Registry
                                  - Repository
                                  - Tag
                                  type: string
                                operator:
                                  description: Operator represents the operator which
                                    will apply on the image.
                                  enum:
                                  - add
                                  - remove
                                  - replace
                                  type: string
                                predicate:
                                  description: "Predicate filters images before applying
                                    the rule. \n Defaults to nil, in that case, the
                                    system will automatically detect image fields
                                    if the resource type is Pod, ReplicaSet, Deployment
                                    or StatefulSet by following rule: - Pod: spec/containers/<N>/image
                                    - ReplicaSet: spec/template/spec/containers/<N>/image
                                    - Deployment: spec/template/spec/containers/<N>/image
                                    - StatefulSet: spec/template/spec/containers/<N>/image
                                    In addition, all images will be processed if the
                                    resource object has more than one containers.
                                    \n If not nil, only images matches the filters
                                    will be processed."
                                  properties:
                                    path:
                                      description: Path indicates the path of target
                                        field
                                      type: string
                                  required:
                                  - path
                                  type: object
                                value:
                                  description: Value to be applied to image. Must
                                    not be empty when operator is 'add' or 'replace'.
                                    Defaults to empty and ignored when operator is
                                    'remove'.
                                  type: string
                              required:
                              - component
                              - operator
                              type: object
                            type: array
                          plaintext:
                            description: Plaintext represents override rules defined
                              with plaintext overriders.
                            items:
                              description: PlaintextOverrider is a simple overrider
                                that overrides target fields according to path, operator
                                and value.
                              properties:
                                operator:
                                  description: 'Operator indicates the operation on
                                    target field. Available operators are: add, update
                                    and remove.'
                                  enum:
                                  - add
                                  - remove
                                  - replace
                                  type: string
                                path:
                                  description: Path indicates the path of target field
                                  type: string
                                value:
                                  description: Value to be applied to target field.
                                    Must be empty when operator is Remove.
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                              - operator
                              - path
                              type: object
                            type: array
                        type: object
                      resourceSelectors:
                        description: ResourceSelectors restricts resource types that
                          this override policy applies to. nil means matching all
                          resources.
                        items:
                          description: ResourceSelector the resources will be selected.
                          properties:
                            apiVersion:
                              description: APIVersion represents the API version of
                                the target resources.
                              type: string
                            kind:
                              description: Kind represents the Kind of the target
                                resources.
                              type: string
                            labelSelector:
                              description: A label query over a set of resources.
                                If name is not empty, labelSelector will be ignored.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            name:
                              description: Name of the target resource. Default is
                                empty, which means selecting all resources.
                              type: string
                            namespace:
                              description: Namespace of the target resource. Default
                                is empty, which means inherit from the parent object
                                scope.
                              type: string
                          required:
                          - apiVersion
                          - kind
                          type: object
                        type: array
                      targetCluster:
                        description: "TargetCluster defines restrictions on this override
                          policy that only applies to resources propagated to the
                          matching clusters. nil means matching all clusters. \n Deprecated:
                          This filed is deprecated in v1.0 and please use the OverrideRules
                          instead."
                        properties:
                          clusterNames:
                            description: ClusterNames is the list of clusters to be
                              selected.
                            items:
                              type: string
                            type: array
                          exclude:
                            description: ExcludedClusters is the list of clusters
                              to be ignored.
                            items:
                              type: string
                            type: array
                          fieldSelector:
                            description: FieldSelector is a filter to select member
                              clusters by fields. If non-nil and non-empty, only the
                              clusters match this filter will be selected.
                            properties:
                              matchExpressions:
                                description: A list of field selector requirements.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          labelSelector:
                            description: LabelSelector is a filter to select member
                              clusters by labels. If non-nil and non-empty, only the
                              clusters match this filter will be selected.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    type: object
                  propagationPolicy:
                    description: PropagationSpec represents the desired behavior of
                      PropagationPolicy.
                    properties:
                      association:
                        description: 'Association tells if relevant resources should
                          be selected automatically. e.g. a ConfigMap referred by
                          a Deployment. default false. Deprecated: in favor of PropagateDeps.'
                        type: boolean
                      dependentOverrides:
                        description: "DependentOverrides represents the list of overrides(OverridePolicy)
                          which must present before the current PropagationPolicy
                          takes effect. \n It used to explicitly specify overrides
                          which current PropagationPolicy rely on. A typical scenario
                          is the users create OverridePolicy(ies) and resources at
                          the same time, they want to ensure the new-created policies
                          would be adopted. \n Note: For the overrides, OverridePolicy(ies)
                          in current namespace and ClusterOverridePolicy(ies), which
                          not present in this list will still be applied if they matches
                          the resources."
                        items:
                          type: string
                        type: array
                      placement:
                        description: Placement represents the rule for select clusters
                          to propagate resources.
                        properties:
                          clusterAffinity:
                            description: ClusterAffinity represents scheduling restrictions
                              to a certain set of clusters. If not set, any cluster
                              can be scheduling candidate.
                            properties:
                              clusterNames:
                                description: ClusterNames is the list of clusters
                                  to be selected.
                                items:
                                  type: string
                                type: array
                              exclude:
                                description: ExcludedClusters is the list of clusters
                                  to be ignored.
                                items:
                                  type: string
                                type: array
                              fieldSelector:
                                description: FieldSelector is a filter to select member
                                  clusters by fields. If non-nil and non-empty, only
                                  the clusters match this filter will be selected.
                                properties:
                                  matchExpressions:
                                    description: A list of field selector requirements.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              labelSelector:
                                description: LabelSelector is a filter to select member
                                  clusters by labels. If non-nil and non-empty, only
                                  the clusters match this filter will be selected.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          clusterTolerations:
                            description: ClusterTolerations represents the tolerations.
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                          replicaScheduling:
                            description: ReplicaScheduling represents the scheduling
                              policy on dealing with the number of replicas when propagating
                              resources that have replicas in spec (e.g. deployments,
                              statefulsets) to member clusters.
                            properties:
                              replicaDivisionPreference:
                                description: ReplicaDivisionPreference determines
                                  how the replicas is divided when ReplicaSchedulingType
                                  is "Divided". Valid options are Aggregated and Weighted.
                                  "Aggregated" divides replicas into clusters as few
                                  as possible, while respecting clusters' resource
                                  availabilities during the division. "Weighted" divides
                                  replicas by weight according to WeightPreference.
                                enum:
                                - Aggregated
                                - Weighted
                                type: string
                              replicaSchedulingType:
                                description: ReplicaSchedulingType determines how
                                  the replicas is scheduled when karmada propagating
                                  a resource. Valid options are Duplicated and Divided.
                                  "Duplicated" duplicates the same replicas to each
                                  candidate member cluster from resource. "Divided"
                                  divides replicas into parts according to number
                                  of valid candidate member clusters, and exact replicas
                                  for each cluster are determined by ReplicaDivisionPreference.
                                enum:
                                - Duplicated
                                - Divided
                                type: string
                              weightPreference:
                                description: WeightPreference describes weight for
                                  each cluster or for each group of cluster If ReplicaDivisionPreference
                                  is set to "Weighted", and WeightPreference is not
                                  set, scheduler will weight all clusters the same.
                                properties:
                                  dynamicWeight:
                                    description: DynamicWeight specifies the factor
                                      to generates dynamic weight list. If specified,
                                      StaticWeightList will be ignored.
                                    enum:
                                    - AvailableReplicas
                                    type: string
                                  staticWeightList:
                                    description: StaticWeightList defines the static
                                      cluster weight.
                                    items:
                                      description: StaticClusterWeight defines the
                                        static cluster weight.
                                      properties:
                                        targetCluster:
                                          description: TargetCluster describes the
                                            filter to select clusters.
                                          properties:
                                            clusterNames:
                                              description: ClusterNames is the list
                                                of clusters to be selected.
                                              items:
                                                type: string
                                              type: array
                                            exclude:
                                              description: ExcludedClusters is the
                                                list of clusters to be ignored.
                                              items:
                                                type: string
                                              type: array
                                            fieldSelector:
                                              description: FieldSelector is a filter
                                                to select member clusters by fields.
                                                If non-nil and non-empty, only the
                                                clusters match this filter will be
                                                selected.
                                              properties:
                                                matchExpressions:
                                                  description: A list of field selector
                                                    requirements.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                            labelSelector:
                                              description: LabelSelector is a filter
                                                to select member clusters by labels.
                                                If non-nil and non-empty, only the
                                                clusters match this filter will be
                                                selected.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                        weight:
                                          description: Weight expressing the preference
                                            to the cluster(s) specified by 'TargetCluster'.
                                          format: int64
                                          minimum: 1
                                          type: integer
                                      required:
                                      - targetCluster
                                      - weight
                                      type: object
                                    type: array
                                type: object
                            type: object
                          spreadConstraints:
                            description: SpreadConstraints represents a list of the
                              scheduling constraints.
                            items:
                              description: SpreadConstraint represents the spread
                                constraints on resources.
                              properties:
                                maxGroups:
                                  description: MaxGroups restricts the maximum number
                                    of cluster groups to be selected.
                                  type: integer
                                minGroups:
                                  description: MinGroups restricts the minimum number
                                    of cluster groups to be selected. Defaults to
                                    1.
                                  type: integer
                                spreadByField:
                                  description: 'SpreadByField represents the fields
                                    on Karmada cluster API used for dynamically grouping
                                    member clusters into different groups. Resources
                                    will be spread among different cluster groups.
                                    Available fields for spreading are: cluster, region,
                                    zone, and provider. SpreadByField should not co-exist
                                    with SpreadByLabel. If both SpreadByField and
                                    SpreadByLabel are empty, SpreadByField will be
                                    set to "cluster" by system.'
                                  enum:
                                  - cluster
                                  - region
                                  - zone
                                  - provider
                                  type: string
                                spreadByLabel:
                                  description: SpreadByLabel represents the label
                                    key used for grouping member clusters into different
                                    groups. Resources will be spread among different
                                    cluster groups. SpreadByLabel should not co-exist
                                    with SpreadByField.
                                  type: string
                              type: object
                            type: array
                        type: object
                      propagateDeps:
                        description: "PropagateDeps tells if relevant resources should
                          be propagated automatically. Take 'Deployment' which referencing
                          'ConfigMap' and 'Secret' as an example, when 'propagateDeps'
                          is 'true', the referencing resources could be omitted(for
                          saving config effort) from 'resourceSelectors' as they will
                          be propagated along with the Deployment. In addition to
                          the propagating process, the referencing resources will
                          be migrated along with the Deployment in the fail-over scenario.
                          \n Defaults to false."
                        type: boolean
                      resourceSelectors:
                        description: ResourceSelectors used to select resources.
                        items:
                          description: ResourceSelector the resources will be selected.
                          properties:
                            apiVersion:
                              description: APIVersion represents the API version of
                                the target resources.
                              type: string
                            kind:
                              description: Kind represents the Kind of the target
                                resources.
                              type: string
                            labelSelector:
                              description: A label query over a set of resources.
                                If name is not empty, labelSelector will be ignored.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            name:
                              description: Name of the target resource. Default is
                                empty, which means selecting all resources.
                              type: string
                            namespace:
                              description: Namespace of the target resource. Default
                                is empty, which means inherit from the parent object
                                scope.
                              type: string
                          required:
                          - apiVersion
                          - kind
                          type: object
                        type: array
                      schedulerName:
                        description: SchedulerName represents which scheduler to proceed
                          the scheduling. If specified, the policy will be dispatched
                          by specified scheduler. If not specified, the policy will
                          be dispatched by default scheduler.
                        type: string
                    required:
                    - resourceSelectors
                    type: object
                  properties:
                    items:
                      type: object
                    type: array
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - properties
                type: object
              type:
                enum:
                - manifest
                - helm
                type: string
            required:
            - type
            type: object
          status:
            description: KubeApplicationStatus defines the observed state of KubeApplication
            properties:
              appliedResources:
                items:
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              latestRevision:
                properties:
                  name:
                    type: string
                  revision:
                    format: int64
                    type: integer
                required:
                - name
                - revision
                type: object
              message:
                type: string
              observedGeneration:
                format: int64
                type: integer
              operationStatus:
                properties:
                  desiredState:
                    type: string
                  firstExecuteTime:
                    format: date-time
                    type: string
                  lastExecuteTime:
                    format: date-time
                    type: string
                  reboot:
                    type: boolean
                  status:
                    type: string
                  type:
                    description: The generation observed by the application controller.
                    type: string
                required:
                - reboot
                type: object
              status:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
